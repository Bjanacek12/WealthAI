# .gitignore for WealthAI Monorepo (Python Backend + Node.js Frontend)

##########################
#    Python / Flask      #
##########################

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
# .cache/ # Note: .cache/ is often used by Node tools too. If distinct, use /backend/.cache/
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
# *.log # Be careful with generic *.log if frontend also uses .log files
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# .python-version

# pipenv
# Pipfile.lock

# UV
# uv.lock

# poetry
# poetry.lock

# pdm
# pdm.lock
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc


##########################
#  Node.js / Frontend    #
##########################

# Logs
# logs/ # If you have a top-level logs dir
# *.log # Consider being more specific, e.g., /frontend/*.log if needed

# Dependency directories
node_modules/
jspm_packages/ # For JSPM

# Build output folders (common names)
# dist/ # Already in Python section, but good to note
# build/ # Already in Python section
out/
public/ # Only if 'public' is a build output, not source (your 'public' seems to be source for now)

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage/ # Ensure this doesn't conflict if Python also creates a 'coverage' dir not in .gitignore

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons
# build/Release # 'build' is already covered

# Snowpack dependency directory
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file (some already covered by Python's .env)
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local # Generic for other .env variants

# parcel-bundler cache
# .cache # Already in Python section

# Next.js build output
.next/

# Nuxt.js build output
.nuxt/
# dist/ # Already covered

# Gatsby files
# .cache/
# public/ # (If Gatsby's public is build output)

# SvelteKit build output
.svelte-kit/

# Vue build output
# dist/ # Already covered

# Create React App build output
# build/ # Already covered

# Angular build output
# dist/ # Already covered

# Docusaurus build output
build-docs/ # Example, adjust if you use it

# Temporary Storybook files
.storybook-static-temp/


###################################
#  Global / OS / IDE Specifics    #
###################################

# IDE settings folders
.vscode/
.idea/ # General JetBrains (PyCharm, WebStorm, etc.)
*.swp # Vim swap files
*~ # Backup files

# Operating System generated files
.DS_Store # macOS
Thumbs.db # Windows
ehthumbs.db # Windows
Desktop.ini # Windows

# Other common generated files
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json # Node.js diagnostic reports